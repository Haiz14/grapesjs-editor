{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/grapesjs-tui-image-editor@1.0.2/node_modules/grapesjs-tui-image-editor/dist/webpack:/grapesjs-tui-image-editor/webpack/universalModuleDefinition", "../../node_modules/.pnpm/grapesjs-tui-image-editor@1.0.2/node_modules/grapesjs-tui-image-editor/dist/webpack:/grapesjs-tui-image-editor/webpack/bootstrap", "../../node_modules/.pnpm/grapesjs-tui-image-editor@1.0.2/node_modules/grapesjs-tui-image-editor/dist/webpack:/grapesjs-tui-image-editor/webpack/runtime/define property getters", "../../node_modules/.pnpm/grapesjs-tui-image-editor@1.0.2/node_modules/grapesjs-tui-image-editor/dist/webpack:/grapesjs-tui-image-editor/webpack/runtime/hasOwnProperty shorthand", "../../node_modules/.pnpm/grapesjs-tui-image-editor@1.0.2/node_modules/grapesjs-tui-image-editor/dist/webpack:/grapesjs-tui-image-editor/webpack/runtime/make namespace object", "../../node_modules/.pnpm/grapesjs-tui-image-editor@1.0.2/node_modules/grapesjs-tui-image-editor/dist/webpack:/grapesjs-tui-image-editor/src/index.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-tui-image-editor\"] = factory();\n\telse\n\t\troot[\"grapesjs-tui-image-editor\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "import type { Component, Plugin } from 'grapesjs';\nimport type tuiImageEditor from 'tui-image-editor';\n\ntype ImageEditor = tuiImageEditor.ImageEditor;\ntype IOptions = tuiImageEditor.IOptions;\ntype Constructor<K> = { new(...any: any): K };\n\nexport type PluginOptions = {\n  /**\n   * TOAST UI's configurations\n   * https://nhn.github.io/tui.image-editor/latest/ImageEditor\n   */\n  config?: IOptions;\n\n  /**\n   * Pass the editor constructor.\n   * By default, the `tui.ImageEditor` will be used.\n   */\n  constructor?: any;\n\n  /**\n   * Label for the image editor (used in the modal)\n   * @default 'Image Editor'\n   */\n  labelImageEditor?: string;\n\n  /**\n   * Label used on the apply button\n   * @default 'Apply'\n   */\n  labelApply?: string;\n\n  /**\n   * Default editor height\n   * @default '650px'\n   */\n  height?: string;\n\n  /**\n   * Default editor width\n   * @default '100%'\n   */\n  width?: string;\n\n  /**\n   * Id to use to create the image editor command\n   * @default 'tui-image-editor'\n   */\n  commandId?: string;\n\n  /**\n   * Icon used in the image component toolbar. Pass an empty string to avoid adding the icon.\n   */\n  toolbarIcon?: string;\n\n  /**\n   * Hide the default editor header\n   * @default true\n   */\n  hideHeader?: boolean;\n\n  /**\n   * By default, GrapesJS takes the modified image, adds it to the Asset Manager and update the target.\n   * If you need some custom logic you can use this custom 'onApply' function.\n   * @example\n   * onApply: (imageEditor, imageModel) => {\n   *    const dataUrl = imageEditor.toDataURL();\n   *    editor.AssetManager.add({ src: dataUrl }); // Add it to Assets\n   *    imageModel.set('src', dataUrl); // Update the image component\n   * }\n   */\n  onApply?: ((imageEditor: ImageEditor, imageModel: Component) => void) | null;\n\n  /**\n   * If no custom `onApply` is passed and this option is `true`, the result image will be added to assets\n   * @default true\n   */\n  addToAssets?: boolean;\n\n   /**\n    * If no custom `onApply` is passed, on confirm, the edited image, will be passed to the\n    * AssetManager's uploader and the result (eg. instead of having the dataURL you'll have the URL)\n    * will be passed to the default `onApply` process (update target, etc.)\n    */\n  upload?: boolean;\n\n  /**\n   * The apply button (HTMLElement) will be passed as an argument to this function, once created.\n   * This will allow you a higher customization.\n   */\n  onApplyButton?: (btn: HTMLElement) => void;\n\n  /**\n   * Scripts to load dynamically in case no TOAST UI editor instance was found\n   */\n  script?: string[];\n\n  /**\n   * In case the script is loaded this style will be loaded too\n   */\n  style?: string[];\n};\n\nconst plugin: Plugin<PluginOptions> = (editor, options = {}) => {\n  const opts: Required<PluginOptions> = {\n    config: {},\n    constructor: '',\n    labelImageEditor: 'Image Editor',\n    labelApply: 'Apply',\n    height: '650px',\n    width: '100%',\n    commandId: 'tui-image-editor',\n    toolbarIcon: `<svg viewBox=\"0 0 24 24\">\n                    <path d=\"M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z\">\n                    </path>\n                  </svg>`,\n    hideHeader: true,\n    addToAssets: true,\n    upload: false,\n    onApplyButton: () => {},\n    onApply: null,\n    script: [\n      'https://uicdn.toast.com/tui.code-snippet/v1.5.2/tui-code-snippet.min.js',\n      'https://uicdn.toast.com/tui-color-picker/v2.2.7/tui-color-picker.min.js',\n      'https://uicdn.toast.com/tui-image-editor/v3.15.2/tui-image-editor.min.js'\n    ],\n    style: [\n      'https://uicdn.toast.com/tui-color-picker/v2.2.7/tui-color-picker.min.css',\n      'https://uicdn.toast.com/tui-image-editor/v3.15.2/tui-image-editor.min.css',\n    ],\n    ...options,\n  };\n\n  const { script, style, height, width, hideHeader, onApply, upload, addToAssets, commandId } = opts;\n  const hasWindow = typeof window !== 'undefined';\n\n  const getConstructor = (): Constructor<ImageEditor> => {\n    return opts.constructor ||\n      (hasWindow && (window as any).tui?.ImageEditor);\n  };\n\n  let constr = getConstructor();\n\n  // Dynamic loading of the image editor scripts and styles\n  if (!constr && script?.length && hasWindow) {\n    const { head } = document;\n    const scripts = Array.isArray(script) ? [...script] : [script];\n    const styles = (Array.isArray(style) ? [...style] : [style]) as string[];\n    const appendStyle = (styles: string[]) => {\n      if (styles.length) {\n        const link = document.createElement('link');\n        link.href = styles.shift()!;\n        link.rel = 'stylesheet';\n        head.appendChild(link);\n        appendStyle(styles);\n      }\n    }\n    const appendScript = (scripts: string[]) => {\n      if (scripts.length) {\n        const scr = document.createElement('script');\n        scr.src = scripts.shift()!;\n        scr.onerror = scr.onload = appendScript.bind(null, scripts);\n        head.appendChild(scr);\n      } else {\n        constr = getConstructor();\n      }\n    }\n    appendStyle(styles);\n    appendScript(scripts);\n  }\n\n  // Update image component toolbar\n  if (opts.toolbarIcon) {\n    editor.Components.addType('image', {\n      extendFn: ['initToolbar'],\n      model: {\n        initToolbar() {\n          const tb = this.get('toolbar');\n          const tbExists = tb?.some(item => item.command === commandId);\n\n          if (!tbExists) {\n            tb?.unshift({\n              command: commandId,\n              label: opts.toolbarIcon,\n            });\n            this.set('toolbar', tb);\n          }\n        }\n      }\n    });\n  }\n\n  // Add the image editor command\n  const errorOpts = { level: 'error', ns: commandId };\n  editor.Commands.add(commandId, {\n    imageEditor: null as tuiImageEditor | null,\n\n    run(ed, s, options = {}) {\n      if (!constr) {\n        ed.log('TOAST UI Image editor not found', errorOpts);\n        return ed.stopCommand(commandId);\n      }\n\n      const target = (options.target || ed.getSelected()) as Component;\n\n      if (!target) {\n        ed.log('Target not available', errorOpts);\n        return ed.stopCommand(commandId);\n      }\n\n      const content = this.createContent();\n      const title = opts.labelImageEditor;\n      const btn = content.children[1] as HTMLElement;\n      ed.Modal.open({ title, content }).onceClose(() => ed.stopCommand(commandId))\n\n      const editorConfig = this.getEditorConfig(target.get('src'));\n      this.imageEditor = new constr(content.children[0], editorConfig);\n      ed.getModel().setEditing(true);\n      btn.onclick = () => this.applyChanges(target);\n      opts.onApplyButton(btn);\n    },\n\n    stop(ed) {\n      (this.imageEditor as tuiImageEditor)?.destroy();\n      ed.getModel().setEditing(false);\n    },\n\n    getEditorConfig(path: string): IOptions {\n      const config: IOptions = { ...opts.config };\n\n      if (!config.includeUI) config.includeUI = {};\n\n      config.includeUI = {\n        theme: {},\n        ...config.includeUI,\n        loadImage: { path, name: '1' },\n        uiSize: { height, width },\n      };\n\n      if (hideHeader) {\n        // @ts-ignore\n        config.includeUI.theme['header.display'] = 'none';\n      }\n\n      return config;\n    },\n\n    createContent(): HTMLDivElement {\n      const content = document.createElement('div');\n      content.style.position = 'relative';\n      content.innerHTML = `\n        <div></div>\n        <button class=\"tui-image-editor__apply-btn\" style=\"\n          position: absolute;\n          top: 0; right: 0;\n          margin: 10px;\n          background-color: #fff;\n          font-size: 1rem;\n          border-radius: 3px;\n          border: none;\n          padding: 10px 20px;\n          cursor: pointer\n        \">\n          ${opts.labelApply}\n        </botton>\n      `;\n\n      return content;\n    },\n\n    applyChanges(target: Component) {\n      const ied = this.imageEditor as tuiImageEditor;\n\n      if (onApply) {\n        onApply(ied, target);\n      } else {\n        if (ied.getDrawingMode() === 'CROPPER') {\n          ied.crop(ied.getCropzoneRect()).then(() => {\n            this.uploadImage(ied, target);\n          });\n        } else {\n          this.uploadImage(ied, target);\n        }\n      }\n    },\n\n    uploadImage(imageEditor: ImageEditor, target: Component) {\n      const am = editor.Assets;\n      const dataURL = imageEditor.toDataURL();\n\n      if (upload) {\n        const file = this.dataUrlToBlob(dataURL);\n        am.FileUploader().uploadFile({\n          dataTransfer: {\n            // @ts-ignore\n            files: [file]\n          }\n        }, (res: any) => {\n          const obj = res && res.data && res.data[0];\n          const src = obj && (typeof obj === 'string' ? obj : obj.src);\n          src && this.applyToTarget(src, target);\n        });\n      } else {\n        addToAssets && am.add({\n          src: dataURL,\n          name: (target.get('src') || '').split('/').pop(),\n        });\n        this.applyToTarget(dataURL, target);\n      }\n    },\n\n    applyToTarget(result: string, target: Component) {\n      target.set('src', result);\n      editor.Modal.close();\n    },\n\n    dataUrlToBlob(dataURL: string) {\n      const data = dataURL.split(',');\n      const byteStr = window.atob(data[1]);\n      const type = data[0].split(':')[1].split(';')[0];\n      const ab = new ArrayBuffer(byteStr.length);\n      const ia = new Uint8Array(ab);\n\n      for (let i = 0; i < byteStr.length; i++) {\n          ia[i] = byteStr.charCodeAt(i);\n      }\n\n      return new Blob([ab], { type });\n    },\n  });\n};\n\nexport default plugin;"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "globalThis", "window", "this", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "t", "e", "n", "i", "editor", "options", "opts", "config", "constructor", "labelImageEditor", "labelApply", "height", "width", "commandId", "toolbarIcon", "hideHeader", "addToAssets", "upload", "onApplyButton", "onApply", "script", "style", "hasWindow", "getConstructor", "tui", "ImageEditor", "constr", "length", "document", "scripts", "Array", "isArray", "styles", "link", "createElement", "href", "shift", "rel", "appendChild", "scr", "src", "onerror", "onload", "bind", "Components", "addType", "extendFn", "model", "initToolbar", "tb", "some", "item", "command", "unshift", "label", "set", "errorOpts", "level", "ns", "Commands", "add", "imageEditor", "run", "ed", "s", "log", "stopCommand", "target", "getSelected", "content", "createContent", "title", "btn", "children", "Modal", "open", "l", "a", "onceClose", "editorConfig", "getEditorConfig", "getModel", "setEditing", "onclick", "applyChanges", "stop", "destroy", "path", "includeUI", "theme", "loadImage", "name", "uiSize", "position", "innerHTML", "ied", "getDrawingMode", "crop", "getCropzoneRect", "then", "uploadImage", "am", "Assets", "dataURL", "toDataURL", "file", "dataUrlToBlob", "FileUploader", "uploadFile", "dataTransfer", "files", "res", "data", "applyToTarget", "split", "pop", "result", "close", "byteStr", "atob", "type", "ab", "ArrayBuffer", "ia", "Uint8Array", "charCodeAt", "Blob"]
}
